[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "xugrid"
description = "Xarray extension for unstructured grids"
readme = { file = "README.rst", content-type = "text/x-rst" }
maintainers = [{ name = "Huite Bootsma", email = "huite.bootsma@deltares.nl" }]
requires-python = ">=3.9"
dependencies = [
    'pandas',
    'numba',
    'numba_celltree>=0.4.1',
    'numpy',
    'pooch',
    'scipy',
    'xarray',
]
dynamic = ["version"]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: Implementation :: CPython',
    'Topic :: Scientific/Engineering',
]
keywords = ['mesh', 'ugrid', 'unstructured grid', 'xarray']
license = { text = "MIT" }

[project.urls]
Home = "https://github.com/deltares/xugrid"
Code = "https://github.com/deltares/xugrid"
Issues = "https://github.com/deltares/xugrid/issues"

[project.optional-dependencies]
all = [
    'geopandas',
    'mapbox_earcut',
    'matplotlib',
    'meshkernel >= 3.0.0',
    'netcdf4',
    'pooch',
    'shapely >= 2.0',
    'pyproj',
    'zarr',
]

[tool.hatch.version]
path = "xugrid/__init__.py"

[tool.hatch.build.targets.sdist]
only-include = ["xugrid", "tests"]

[tool.isort]
profile = "black"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@abc.abstractmethod",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.pypi-dependencies]
xugrid = { path = ".", editable = true }
numba_celltree = ">=0.4.1"

[tool.pixi.dependencies]
dask = "*"
geopandas = "*"
mapbox_earcut = "*"
matplotlib-base = "*"
netcdf4 = "*"
# numba_celltree = ">=0.4.0"
numpy = "*"
pip = "*"
pooch = "*"
pre-commit = "*"
pydata-sphinx-theme = "*"
pymetis = "*"
pyproj = "*"
pytest = "*"
pytest-cases = "*"
pytest-cov = "*"
python = ">=3.9"
ruff = "*"
shapely = ">=2.0"
scipy = "*"
sphinx = "*"
sphinx-gallery = "*"
xarray = "*"
zarr = "*"
ipykernel = "*"  # So we can run examples
twine = "*"
python-build = "*"

[tool.pixi.tasks]
install-pre-commit = "pre-commit install"
pre-commit = "pre-commit run --all-files"
test = "NUMBA_DISABLE_JIT=1 pytest --cov=xugrid --cov-report xml --cov-report term"
docs = "NUMBA_DISABLE_JIT=1 sphinx-build docs docs/_build"
all = { depends-on = ["pre-commit", "test", "docs"]}
pypi-publish = "rm --recursive --force dist && python -m build && twine check dist/* && twine upload dist/*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py309.dependencies]
python = "3.9.*"

[tool.pixi.environments]
default = { features = ["py312"], solve-group = "py312" }
py313 = { features = ["py313"], solve-group = "py313" }
py312 = { features = ["py312"], solve-group = "py312" }
py311 = ["py311"]
py310 = ["py310"]
py309 = ["py309"]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules/
select = ["C4", "D2", "D3", "D4", "E", "F", "I", "NPY", "PD"]
ignore = [
    "D202",
    "D205",
    "D206",
    "D400",
    "D404",
    "E402",
    "E501",
    "E703",
    "PD002",
    "PD901",
    "PD003",
    "PD004",
]
ignore-init-module-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"
